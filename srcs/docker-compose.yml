networks:
  main:
    driver: bridge #: containers on same network can talk to each other but are isolated from outside world, unless exposed

volumes:
  wp-db: #used to store the wp database
    driver_opts:
      type: none #type of volume is bind mount
      device: /home/tom/data/wp-db #path to dir on host
      o: bind #changes in container and host dir will affect each other vice versa
  wp-sites: #used to store the wp php configs
    driver_opts:
      type: none
      device: /home/tom/data/wp-sites
      o: bind
  portainer_data: #used to store the portainer configs
    driver_opts:
      type: none
      device: /home/tom/data/portainer
      o: bind

services:
  nginx: #webserver: handles HTTPS request from browser and redirects php requests to php-fpm
    container_name: nginx
    build: ./requirements/nginx
    ports: 
      - "443:443" #maps port 443 of container to port 443 of host (used by https)
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    networks:
      - main
    volumes:
      - wp-sites:/var/www/html
    restart: always
    depends_on:
      - wordpress

  wordpress: #PHP-FPM: Runs WordPress as a PHP application. It processes requests and interacts with the database to serve WordPress content.
    container_name: wordpress
    build: ./requirements/wordpress
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
      - DB_HOST=${DB_HOST}
    secrets:
      - db_name
      - db_user
      - db_password
      - wp_admin_user
      - wp_admin_password
      - wp_admin_email
      - wp_user
      - wp_password
      - wp_email
    networks:
      - main
    volumes:
      - wp-sites:/var/www/html
    restart: always
    depends_on:
      - mariadb
      - redis

  mariadb: #Database server. Hosts wp db.
    container_name: mariadb
    build: ./requirements/mariadb
    secrets:
      - db_name
      - db_user
      - db_password
    networks:
      - main
    volumes:
      - wp-db:/var/lib/mysql
    restart: always



  redis: #caching server: stores frequently accessed data in memory to speed up wordpress response time
    container_name: redis
    build: ./requirements/bonus/redis
    networks:
      - main
    restart: always
  ftp: #allows file uploading to the wp-sites dir
    container_name: ftp
    build: ./requirements/bonus/ftp
    volumes:
        - wp-sites:/var/www/html
    secrets:
      - ftp_user
      - ftp_password
    ports:
        - "21:21" # is needed for the initial connection and control commands
        - "50000-50100:50000-50100" # is needed to communicate with clients behind firewalls or NAT (passive mode)
    depends_on:
        - wordpress
    networks:
      - main
    restart: always
  static-site: #small busybox httpd webserver that serves static html page
    container_name: static-site
    build: ./requirements/bonus/static-site
    ports:
      - "8080:8080"
    networks:
      - main
    restart: always
  adminer: #web interface to manage mariadb db
    container_name: adminer
    build: ./requirements/bonus/adminer
    ports:
      - "8081:8081"
    networks:
      - main
    restart: always
  portainer: #web interface to manage docker
    container_name: portainer
    build: ./requirements/bonus/portainer
    secrets:
      - portainer_admin_password
    ports:
      - "8082:9000"
    networks:
      - main
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # provides access to the Docker socket for Portainer to manage Docker resources
      - portainer_data:/data
    restart: always

secrets:
  db_name:
    file: ../secrets/db_name.txt
  db_user:
    file: ../secrets/db_user.txt
  db_password:
    file: ../secrets/db_password.txt
  wp_admin_user:
    file: ../secrets/wp_admin_user.txt
  wp_admin_password:
    file: ../secrets/wp_admin_password.txt
  wp_admin_email:
    file: ../secrets/wp_admin_email.txt
  wp_user:
    file: ../secrets/wp_user.txt
  wp_password:
    file: ../secrets/wp_password.txt
  wp_email:
    file: ../secrets/wp_email.txt
  ftp_user:
    file: ../secrets/ftp_user.txt
  ftp_password:
    file: ../secrets/ftp_password.txt
  portainer_admin_password:
    file: ../secrets/portainer_admin_password.txt